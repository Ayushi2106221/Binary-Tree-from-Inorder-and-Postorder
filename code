class Solution {
  public:
  int findpos(int in[], int element, int n){
      int ans;
      for(int i=0;i<n;i++){
          if(in[i]==element)
          return i;
      }
      return -1;
  }
    Node * solve(int in[], int post[], int &index, int inorderstart, int inorderend, int n){
        //base case
        if(index<0 || inorderstart>inorderend){
            return NULL;
        }
        int element=post[index];
        index--;
        int pos=findpos(in,element,n);
        Node *root=new Node(element);
        root->right=solve(in,post,index,pos+1,inorderend,n);
        root->left=solve(in,post,index,inorderstart,pos-1,n);
        return root;
    }
    // Function to return a tree created from postorder and inoreder traversals.
    Node *buildTree(int n, int in[], int post[]) {
        int index=n-1;
        Node *ans=solve(in,post,index,0,n-1,n);
        return ans;
    }
};
